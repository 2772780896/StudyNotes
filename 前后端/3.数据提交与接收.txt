'''
数据提交，数据提交有两种方式，get和post
    get：提交的数据会在地址栏中网站地址的后面以 ?数据名1=数据值1&数据名2=数据名2 的形式被看到
    post：提交的数据不会在地址栏中被看到
<form> </form>  包含被提交的数据块，需要在有其中<input type='submit'/>来进行提交
    只会对有name属性的标签进行提交，并且提交的是该标签的name属性的值和value属性的值。
    也可以通过在javascript中使用 该<form>标签.submit() 来提交该标签块，而不是在标签块内使用<input type='submit'/>按钮
    method属性  标明提交数据的方式
    action属性  表明数据被提交到的地址

数据接收，可以通过查看request.method的值为'POST'还是'GET'，来得知接收到的数据是由get提交还是由post提交
    由get提交到的数据被接收到request.args
    由post提交到的数据被接收到request.form
    两者的值的数据类型是ImmutableMultiDict(不可变的多重的字典)，类似于字典，但是允许多个相同的键存在，同时是不可变的。
@app.route('/show/info', methods=['GET'])
                def index(): return
    关键字参数methods表明网站接收数据的方式，默认为GET，一个网址可以同时存在多种接收数据的方式

localstorage与cookie
    cookie
        在浏览器响应头中包含Set-Cookie信息，浏览器自动设置cookie，
            如，Set-Cookie: JSESSIONID=abcde12345; Expires=Fri, 13 Jun 2026 05:53:02 GMT; Path=/; HttpOnly; SameSite=Lax
        浏览器会在访问目标网站时在请求头中包含Cookie数据
            如，Cookie: JSESSIONID=abcde12345
        可以通过document.cookie访问和修改cookie，但设置了httponly的cookie不可被访问
    localstorage
        保存在localstorage中，无过期时间
        通过localStorage.setItem(), localStorage.getItem(), localStorage.removeItem()来修改数据
        若存储token，可通过在请求头中设置Authorization:token 来发送数据

RestFul Api
    URL 路径 (/api/videos/{vid})： 标识唯一资源。它应该指向一个特定的、可独立存在的实体。
    查询参数 (?key=value)： 用于对资源集合进行过滤、排序、分页或提供非必要的参数。
'''

